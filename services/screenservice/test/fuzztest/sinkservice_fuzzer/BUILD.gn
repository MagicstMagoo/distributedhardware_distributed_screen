# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#####################hydra-fuzz###################
import("//build/config/features.gni")
import("//build/test.gni")
import(
    "//foundation/distributedhardware/distributedscreen/distributedscreen.gni")

##############################fuzztest##########################################
ohos_fuzztest("SinkServiceFuzzTest") {
  module_out_path = "distributed_screen/sinkservice"

  fuzz_config_file = "${services_path}/screenservice/test/fuzztest/sinkservice_fuzzer"

  include_dirs = [
      "//third_party/json/include",
      "//utils/native/base/include",
      "//utils/system/safwk/native/include",
      "//foundation/graphic/standard/interfaces/innerkits/surface",
      "${windowmanager_path}/interfaces/innerkits/dm",
      "${fwk_common_path}/utils/include",
  ]

  include_dirs += [
      "./dscreenservice/include",
      "./screenregionmgr/include",
      "${interfaces_path}/innerkits/native_cpp/screen_sink/include",
      "${interfaces_path}/innerkits/native_cpp/screen_sink/include/callback",
      "${interfaces_path}/innerkits/native_cpp/screen_source/include",
      "${interfaces_path}/innerkits/native_cpp/screen_source/include/callback",
      "${common_path}/include",
      "${services_path}/common/utils/include",
      "${services_path}/common/databuffer/include",
      "${services_path}/common/screen_channel/include",
      "${services_path}/screentransport/screensinktrans/include",
      "${services_path}/screentransport/screensinkprocessor/include",
      "${services_path}/screentransport/screensinkprocessor/decoder/include",
      "${services_path}/screenclient/include",
      "${services_path}/screenservice/sinkservice/dscreenservice/include",
      "${services_path}/screenservice/sinkservice/screenregionmgr/include",
  ]

  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]

  sources = [
    "sink_service_fuzzer.cpp",
  ]

  deps = [
      "//utils/native/base:utils",
      "${common_path}:distributed_screen_utils",
      "${services_path}/screentransport/screensinktrans:distributed_screen_sinktrans",
      "${services_path}/screenclient:distributed_screen_client",
      "//foundation/graphic/standard/frameworks/surface:surface",
      "//foundation/distributedhardware/distributedscreen/services/screenservice/sinkservice:distributed_screen_sink",
      "${windowmanager_path}/dm:libdm",
  ]

  defines = [
      "HI_LOG_ENABLE",
      "DH_LOG_TAG=\"SinkServiceFuzzTest\"",
      "LOG_DOMAIN=0xD004100",
  ]

  external_deps = [
      "hiviewdfx_hilog_native:libhilog",
      "ipc:ipc_core",
      "safwk:system_ability_fwk",
      "samgr_standard:samgr_proxy",
      "multimedia_media_standard:media_client",
  ]

}
###############################################################################
group("fuzztest") {
  testonly = true
  deps = [ ":SinkServiceFuzzTest" ]
}
###############################################################################
