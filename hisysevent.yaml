#  Copyright (c) 2022 Huawei Device Co., Ltd.
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

#####################################################
#     below is the format of defining event         #
#####################################################
#domain: domain name.  [Only one domain name can be defined at the top]
#
#author: the author name who defined this event.
#date: the date when this event was defined, format is YYYY-MM-DD.
#logged: source file which refer to this event.
#usage: the usage of this event.
#//Define event name and event properties.
#@EVENT_NAME: the event definition part begin.
#  // __BASE is used for defining the basic info of the event.
#  // "type" optional values are: FAULT, STATISTICS, SECURITY, BEHAVIOR.
#  // "level" optional values are: CRITICAL, MINOR.
#  // "tag" set tags with may used by subscriber of this event, multiple tags devided by space.
#  // "desc" full description of this event.
#  @PARAMETER: {type: parameter type, arrsize: array length(optional), desc: parameter description}.
#  // follow the __BASE block, each line defines a parameter of this event.
#  // "type" optional values are: INT8, UINT8, INT16, UINT16, INT32, UINT32, INT64, UINT64, FLOAT, DOUBLE, STRING.
#  // "arrsize" of the parameter is an array, set a non-zero value.
#  // "desc" full description of this parameter.

#####################################################
#   Example of some hiviewdfx events definition     #
#####################################################

domain: DISTSCREEN

SA_ERROR:
  __BASE: {type: FAULT, level: CRITICAL, desc: dscreen sa error occured}
  PID: {type: INT32, desc: dscreen pid}
  UID: {type: INT32, desc: dscreen uid}
  MSG: {type: STRING, desc: dscreen sa error info}

VIRTUALSCREEN_ERROR:
  __BASE: {type: FAULT, level: CRITICAL, desc: virtual screen error occured}
  PID: {type: INT32, desc: dscreen pid}
  UID: {type: INT32, desc: dscreen uid}
  MSG: {type: STRING, desc: dscreen virtual screen error info}

SOFTBUS_SESSIONSERVER_ERROR:
  __BASE: {type: FAULT, level: CRITICAL, desc: softbus sessionserver error occured}
  PID: {type: INT32, desc: dscreen pid}
  UID: {type: INT32, desc: dscreen uid}
  PKGNAME: {type: STRING, desc: softbus package name}
  SESSIONNAME: {type: STRING, desc: softbus session name}
  MSG: {type: STRING, desc: dscreen softbus sessionserver error info}

SOFTBUS_SESSION_ERROR:
  __BASE: {type: FAULT, level: CRITICAL, desc: softbus session error occured}
  PID: {type: INT32, desc: dscreen pid}
  UID: {type: INT32, desc: dscreen uid}
  MYSESSIONNAME: {type: STRING, desc: softbus my session name}
  PEERSESSIONNAME: {type: STRING, desc: softbus peer session name}
  PEERDEVID: {type: STRING, desc: peer network id}
  MSG: {type: STRING, desc: dscreen softbus session error info}

VIDEO_ENCODER_ERROR:
  __BASE: {type: FAULT, level: CRITICAL, desc: video encoder error occured}
  PID: {type: INT32, desc: dscreen pid}
  UID: {type: INT32, desc: dscreen uid}
  MSG: {type: STRING, desc: dscreen video encoder error info}

VIDEO_DECODER_ERROR:
  __BASE: {type: FAULT, level: CRITICAL, desc: video decoder error occured}
  PID: {type: INT32, desc: dscreen pid}
  UID: {type: INT32, desc: dscreen uid}
  MSG: {type: STRING, desc: dscreen video decoder error info}

WINDOW_ERROR:
  __BASE: {type: FAULT, level: CRITICAL, desc: screenregion window error occured}
  PID: {type: INT32, desc: dscreen pid}
  UID: {type: INT32, desc: dscreen uid}
  MSG: {type: STRING, desc: dscreen virtual window error info}